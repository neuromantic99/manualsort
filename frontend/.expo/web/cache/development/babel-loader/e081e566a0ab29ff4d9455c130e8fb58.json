{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/danieldaylewis/Documents/code/manual-sort/frontend/LargeButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect, sendMsg } from \"./Api\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar LargeButton = function (_React$Component) {\n  _inherits(LargeButton, _React$Component);\n\n  var _super = _createSuper(LargeButton);\n\n  function LargeButton(props) {\n    var _this;\n\n    _classCallCheck(this, LargeButton);\n\n    _this = _super.call(this, props);\n    connect();\n    return _this;\n  }\n\n  _createClass(LargeButton, [{\n    key: \"render\",\n    value: function render() {\n      function clickedYes() {\n        sendMsg(\"Yes\");\n      }\n\n      function clickedNo() {\n        sendMsg(\"No\");\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: clickedYes,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Yes\")), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: clickedNo,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"No\")));\n    }\n  }]);\n\n  return LargeButton;\n}(React.Component);\n\nexport { LargeButton as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    flex: 1\n  },\n  button: {\n    padding: 20,\n    width: '20%'\n  }\n});","map":{"version":3,"sources":["/Users/danieldaylewis/Documents/code/manual-sort/frontend/LargeButton.js"],"names":["React","Button","connect","sendMsg","LargeButton","props","clickedYes","clickedNo","styles","container","button","Component","StyleSheet","create","justifyContent","alignItems","flexDirection","flex","padding","width"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;;AAEA,SAASC,OAAT,EAAkBC,OAAlB;AACA,OAAO,sCAAP;;IAEqBC,W;;;;;AAEnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACAH,IAAAA,OAAO;AAFU;AAGlB;;;;6BAEQ;AAET,eAASI,UAAT,GAAsB;AAClBH,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AACD,eAASI,SAAT,GAAqB;AACjBJ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEJ,UAAnC;AAA+C,QAAA,IAAI,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEH,SAAnC;AAA8C,QAAA,IAAI,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CADJ;AAUC;;;;EA1BsCP,KAAK,CAACW,S;;SAA1BP,W;AA2BnB;AAEF,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAE/BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,aAAa,EAAE,KAHR;AAIPC,IAAAA,IAAI,EAAE;AAJC,GAFoB;AAQ/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,KAAK,EAAE;AAFD;AARuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport { StyleSheet, TextInput, View, Text } from 'react-native';\nimport { connect, sendMsg } from \"./Api\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class LargeButton extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    connect();\n  }\n\n  render() {\n\n  function clickedYes() {\n      sendMsg(\"Yes\")\n  }\n  function clickedNo() {\n      sendMsg(\"No\")\n  }\n\n  return (\n      <View style={styles.container}>\n        <View style={styles.button}>\n          <Button variant=\"primary\" onClick={clickedYes} size=\"lg\">Yes</Button>\n       </View>\n        <View style={styles.button}>\n          <Button variant=\"primary\" onClick={clickedNo} size=\"lg\">No</Button>\n     </View>\n     </View>\n    );\n  }\n }; \n\nconst styles = StyleSheet.create({\n\n  container: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      flex: 1\n  },\n  button: {\n    padding: 20,\n    width: '20%',\n  }\n\n}\n)\n\n\n"]},"metadata":{},"sourceType":"module"}